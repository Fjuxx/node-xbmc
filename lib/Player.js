// Generated by CoffeeScript 1.9.1
(function() {
  var Player, debug, pubsub;

  pubsub = require('./PubSub');

  debug = require('debug')('xbmc:Player');

  Player = (function() {
    function Player() {}

    Player.mixin = function(api) {
      var method, name;
      debug('mixin');
      this.api = api;
      this.api.player = {};
      for (name in this) {
        method = this[name];
        this.api.player[name] = method;
      }
      return delete api.player.mixin;
    };

    Player.open = function(item, options, fn) {
      var dfd;
      if (options == null) {
        options = {};
      }
      if (fn == null) {
        fn = null;
      }
      debug('open', item, options);
      dfd = Player.api.send('Player.Open', {
        item: item,
        options: options
      });
      return dfd.then(function(data) {
        pubsub.emit('player.open', data);
        if (fn) {
          return fn(data);
        }
      });
    };

    Player.getActivePlayers = function(fn) {
      var dfd;
      if (fn == null) {
        fn = null;
      }
      debug('getActivePlayers');
      dfd = Player.api.send('Player.GetActivePlayers');
      return dfd.then(function(data) {
        pubsub.emit('player.activePlayers', data);
        if (fn) {
          return fn(data);
        }
      });
    };

    Player.playPause = function(fn) {
      if (fn == null) {
        fn = null;
      }
      debug('playPause');
      return Player.getActivePlayers(function(data) {
        var dfd, playerId, ref, ref1, ref2, ref3, ref4;
        playerId = (ref = (ref1 = (ref2 = data.result) != null ? ref2.playerid : void 0) != null ? ref1 : (ref3 = data.result[0]) != null ? ref3.playerid : void 0) != null ? ref : (ref4 = data.player) != null ? ref4.playerid : void 0;
        dfd = Player.api.send('Player.PlayPause', {
          playerid: playerId
        });
        return dfd.then(function(data) {
          pubsub.emit('player.playpause', data);
          if (fn) {
            return fn(data);
          }
        });
      });
    };

    Player.stop = function(fn) {
      if (fn == null) {
        fn = null;
      }
      debug('stop');
      return Player.getActivePlayers(function(data) {
        var dfd, playerId, ref, ref1, ref2, ref3, ref4;
        playerId = (ref = (ref1 = (ref2 = data.result) != null ? ref2.playerid : void 0) != null ? ref1 : (ref3 = data.result[0]) != null ? ref3.playerid : void 0) != null ? ref : (ref4 = data.player) != null ? ref4.playerid : void 0;
        dfd = Player.api.send('Player.Stop', {
          playerid: playerId
        });
        return dfd.then(function(data) {
          pubsub.emit('player.stop', data);
          if (fn) {
            return fn(data);
          }
        });
      });
    };

    Player.forward = function(fn) {
      if (fn == null) {
        fn = null;
      }
      debug('forward');
      return Player.rewind(true, fn);
    };

    Player.rewind = function(forward, fn) {
      var speed;
      if (forward == null) {
        forward = false;
      }
      if (fn == null) {
        fn = null;
      }
      speed = forward ? 'increment' : 'decrement';
      debug('rewind', speed);
      return Player.getActivePlayers(function(data) {
        var dfd, playerId, ref, ref1, ref2, ref3, ref4;
        playerId = (ref = (ref1 = (ref2 = data.result) != null ? ref2.playerid : void 0) != null ? ref1 : (ref3 = data.result[0]) != null ? ref3.playerid : void 0) != null ? ref : (ref4 = data.player) != null ? ref4.playerid : void 0;
        dfd = this.api.send('Player.SetSpeed', {
          playerid: playerId,
          speed: speed
        });
        return dfd.then((function(_this) {
          return function(data) {
            pubsub.emit('player.setspeed', data);
            if (fn) {
              return fn(data);
            }
          };
        })(this));
      });
    };

    Player.openYoutube = function(id, options, fn) {
      var item;
      if (options == null) {
        options = {};
      }
      if (fn == null) {
        fn = null;
      }
      debug('openYoutube', id, options);
      item = {
        file: "plugin://plugin.video.youtube/?action=play_video&videoid=" + id
      };
      return Player.open(item, options, fn);
    };

    Player.openFile = function(file, options, fn) {
      var item;
      if (options == null) {
        options = {};
      }
      if (fn == null) {
        fn = null;
      }
      debug('openFile', file, options);
      item = {
        file: file
      };
      return Player.open(item, options, fn);
    };

    Player.next = function(fn) {
      if (fn == null) {
        fn = null;
      }
      debug('next');
      return Player.getActivePlayers(function(data) {
        var dfd, playerId, ref, ref1, ref2, ref3, ref4;
        playerId = (ref = (ref1 = (ref2 = data.result) != null ? ref2.playerid : void 0) != null ? ref1 : (ref3 = data.result[0]) != null ? ref3.playerid : void 0) != null ? ref : (ref4 = data.player) != null ? ref4.playerid : void 0;
        dfd = Player.api.send('Player.GoTo', {
          playerid: playerId,
          to: 'next'
        });
        return dfd.then(function(data) {
          pubsub.emit('player.GoTo', data);
          if (fn) {
            return fn(data);
          }
        });
      });
    };

    Player.previous = function(fn) {
      if (fn == null) {
        fn = null;
      }
      debug('previous');
      return Player.getActivePlayers(function(data) {
        var dfd, playerId, ref, ref1, ref2, ref3, ref4;
        playerId = (ref = (ref1 = (ref2 = data.result) != null ? ref2.playerid : void 0) != null ? ref1 : (ref3 = data.result[0]) != null ? ref3.playerid : void 0) != null ? ref : (ref4 = data.player) != null ? ref4.playerid : void 0;
        dfd = Player.api.send('Player.GoTo', {
          playerid: playerId,
          to: 'previous'
        });
        return dfd.then(function(data) {
          pubsub.emit('player.GoTo', data);
          if (fn) {
            return fn(data);
          }
        });
      });
    };

    Player.getItem = function(fn) {
      if (fn == null) {
        fn = null;
      }
      debug('GetItem');
      return Player.getActivePlayers(function(data) {
        var dfd, playerId, ref, ref1, ref2, ref3, ref4;
        playerId = (ref = (ref1 = (ref2 = data.result) != null ? ref2.playerid : void 0) != null ? ref1 : (ref3 = data.result[0]) != null ? ref3.playerid : void 0) != null ? ref : (ref4 = data.player) != null ? ref4.playerid : void 0;
        if (playerId == null) {
          if (fn) {
            return fn(null);
          }
        } else {
          dfd = Player.api.send('Player.GetItem', {
            playerid: playerId,
            properties: ['title', 'artist']
          });
          return dfd.then(function(data) {
            pubsub.emit('player.GetItem', data);
            if (fn) {
              return fn(data);
            }
          });
        }
      });
    };

    Player.getCurrentlyPlaying = function(fn) {
      if (fn == null) {
        fn = null;
      }
      debug('getCurrentlyPlaying');
      return Player.getItem(function(data) {
        var artist, itm, newData, ref, ref1, ref2, ref3, ref4, ref5, title, type;
        itm = null;
        if (data != null) {
          itm = (ref = data.result) != null ? ref.item : void 0;
        }
        artist = (ref1 = (ref2 = itm != null ? (ref3 = itm.artist) != null ? ref3[0] : void 0 : void 0) != null ? ref2 : itm != null ? itm.artist : void 0) != null ? ref1 : '';
        title = (ref4 = itm != null ? itm.title : void 0) != null ? ref4 : '';
        type = (ref5 = itm != null ? itm.type : void 0) != null ? ref5 : '';
        newData = {
          artist: artist,
          title: title,
          type: type
        };
        if (fn) {
          return fn(newData);
        }
      });
    };

    return Player;

  })();

  module.exports = Player;

}).call(this);
